:orphan:

Examples
========




.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. thumbnail-parent-div-close

.. raw:: html

    </div>

======
Basics
======

This section will cover the basic ideas behind this package.
We introduce the Fused Unbalanced Gromov Wasserstein loss and
its dense solvers. Then we show how a large, low-rank geometry
can be approximated with by computing an embedding, resulting in
much less memory usage. Finally, we show how these embeddings
can be used in combination with sparse solvers for the FUGW loss.


.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="In this example, we sample 2 toy distributions and compute a dense fugw alignment between them. Dense alignments are typically used when both aligned distributions have less than 10k points.">

.. only:: html

  .. image:: /auto_examples/00_basics/images/thumb/sphx_glr_plot_1_dense_thumb.png
    :alt:

  :ref:`sphx_glr_auto_examples_00_basics_plot_1_dense.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Transport distributions using dense solvers</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="In this example, we show how to derive an embedding which approximates the kernel matrix of geodesic distances on a given mesh. This technique is useful when trying to align distributions with a large number of points. Indeed, the kernel matrix of pairwise distances won&#x27;t fit in memory, but an embedding computed in the right dimension can probably estimate it.">

.. only:: html

  .. image:: /auto_examples/00_basics/images/thumb/sphx_glr_plot_2_1_lmds_thumb.png
    :alt:

  :ref:`sphx_glr_auto_examples_00_basics_plot_2_1_lmds.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Generate embeddings from mesh</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="In this example, we sample 2 toy distributions and compute a sparse fugw alignment between them. Sparse alignments are typically used when both aligned distributions have more than 10k points.">

.. only:: html

  .. image:: /auto_examples/00_basics/images/thumb/sphx_glr_plot_2_2_coarse_to_fine_thumb.png
    :alt:

  :ref:`sphx_glr_auto_examples_00_basics_plot_2_2_coarse_to_fine.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Transport distributions using sparse solvers</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>

===============
Brain alignment
===============

This subsection gives an exhaustive overview of brain alignment pipelines which cover 4 cases: volumetric or surface data, low or high resolution. 


.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="In this example, we align 2 low-resolution left hemispheres using 4 fMRI feature maps (z-score contrast maps).">

.. only:: html

  .. image:: /auto_examples/01_brain_alignment/images/thumb/sphx_glr_plot_1_aligning_brain_dense_thumb.png
    :alt:

  :ref:`sphx_glr_auto_examples_01_brain_alignment_plot_1_aligning_brain_dense.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Low-resolution surface alignment of 2 individuals with fMRI data</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="In this example, we show how to use this package to align 2 high-resolution left hemispheres using fMRI feature maps (z-score contrast maps). Note that, since we want this example to run on CPU, we stick to rather low-resolution meshes (around 10k vertices per hemisphere) but that this package can easily scale to resolutions above 150k vertices per hemisphere. In this case, with appropriate hyper-parameters and solver parameters, it takes less than 10 minutes to compute a mapping between 2 such distributions using a V100 Nvidia GPU.">

.. only:: html

  .. image:: /auto_examples/01_brain_alignment/images/thumb/sphx_glr_plot_2_aligning_brain_sparse_thumb.png
    :alt:

  :ref:`sphx_glr_auto_examples_01_brain_alignment_plot_2_aligning_brain_sparse.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">High-resolution surface alignment of 2 individuals with fMRI data</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="In this example, we align 2 low-resolution brain volumes using 4 fMRI feature maps (z-score contrast maps).">

.. only:: html

  .. image:: /auto_examples/01_brain_alignment/images/thumb/sphx_glr_plot_3_aligning_low_res_volumes_thumb.png
    :alt:

  :ref:`sphx_glr_auto_examples_01_brain_alignment_plot_3_aligning_low_res_volumes.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Low-resolution volume alignment of 2 individuals with fMRI data</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="In this example, we align 2 low-resolution brain volumes using 4 fMRI feature maps (z-score contrast maps).">

.. only:: html

  .. image:: /auto_examples/01_brain_alignment/images/thumb/sphx_glr_plot_4_aligning_high_res_volumes_thumb.png
    :alt:

  :ref:`sphx_glr_auto_examples_01_brain_alignment_plot_4_aligning_high_res_volumes.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">High-resolution volume alignment of 2 individuals with fMRI data</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>

=============
Miscellaneous
=============

This section contains a series of miscellaneous tools
that are not directly related to the main functionality of the package,
but that can be useful in some cases.


.. raw:: html

    <div class="sphx-glr-thumbnails">

.. thumbnail-parent-div-open

.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="In this example, we use a callback function to monitor the Pearson correlation between transformed and target features at each iteration of the block-coordinate descent (BCD) algorithm. This can be useful to detect numerical errors, or to check that the mapping is not over-fitting training data.">

.. only:: html

  .. image:: /auto_examples/02_miscellaneous/images/thumb/sphx_glr_plot_1_pearson_correlation_thumb.png
    :alt:

  :ref:`sphx_glr_auto_examples_02_miscellaneous_plot_1_pearson_correlation.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Monitor the Pearson correlation during training with callbacks</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="In this example, we use 3 fMRI feature maps for training and 2 independant fMRI feature maps for testing to examine the evolutions of a training and a validation loss on 2 low-resolution brain volumes.">

.. only:: html

  .. image:: /auto_examples/02_miscellaneous/images/thumb/sphx_glr_plot_2_simple_crossval_thumb.png
    :alt:

  :ref:`sphx_glr_auto_examples_02_miscellaneous_plot_2_simple_crossval.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Using a validation set to monitor the convergence of the fugw loss</div>
    </div>


.. raw:: html

    <div class="sphx-glr-thumbcontainer" tooltip="In this example, we use a callback function to monitor memory usage at each iteration of the block-coordinate descent (BCD) algorithm. This can be useful to detect memory leaks, or to check that the memory usage is not too high for a given device.">

.. only:: html

  .. image:: /auto_examples/02_miscellaneous/images/thumb/sphx_glr_plot_3_memory_usage_callback_thumb.png
    :alt:

  :ref:`sphx_glr_auto_examples_02_miscellaneous_plot_3_memory_usage_callback.py`

.. raw:: html

      <div class="sphx-glr-thumbnail-title">Monitor memory usage at each BCD iteration with callbacks</div>
    </div>


.. thumbnail-parent-div-close

.. raw:: html

    </div>


.. toctree::
   :hidden:
   :includehidden:


   /auto_examples/00_basics/index.rst
   /auto_examples/01_brain_alignment/index.rst
   /auto_examples/02_miscellaneous/index.rst



.. only:: html

 .. rst-class:: sphx-glr-signature

    `Gallery generated by Sphinx-Gallery <https://sphinx-gallery.github.io>`_
